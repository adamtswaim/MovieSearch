/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Logic.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Adam Swaim
 */
public class Application extends javax.swing.JFrame {
    
    private static Connection conn = null;
    private static Statement statement = null;
    private static ResultSet result = null;
    private static String query = null;
    
    public static final int NUM_COLUMNS = 4;
    public static final String[] COLUMN_NAMES_STRINGS = {"Title", "Genre", "Rating", "Year"};
    public static final Vector COLUMN_NAMES = new Vector(Arrays.asList(COLUMN_NAMES_STRINGS));
    

    /**
     * Creates new form Application
     */
    public Application() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSearchPane = new javax.swing.JPanel();
        jSearchField = new javax.swing.JTextField();
        jSearchCombo = new javax.swing.JComboBox();
        jSearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jAddPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jAddTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jAddGenre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jAddYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jAddRating = new javax.swing.JComboBox();
        jErrorLabel = new javax.swing.JLabel();
        jAddButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSearchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Genre", "Rating", "Year" }));

        jSearchButton.setText("Search");
        jSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Genre", "Rating", "Year"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jSearchPaneLayout = new javax.swing.GroupLayout(jSearchPane);
        jSearchPane.setLayout(jSearchPaneLayout);
        jSearchPaneLayout.setHorizontalGroup(
            jSearchPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jSearchPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jSearchPaneLayout.createSequentialGroup()
                        .addComponent(jSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSearchButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jSearchPaneLayout.setVerticalGroup(
            jSearchPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jSearchPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Search Movies", jSearchPane);

        jLabel1.setText("Title:");

        jLabel2.setText("Genre:");

        jLabel3.setText("Year:");

        jLabel4.setText("Rating:");

        jAddRating.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "G", "PG", "PG-13", "R" }));

        jErrorLabel.setText("      ");

        jAddButton.setText("Add Movie");
        jAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jAddPaneLayout = new javax.swing.GroupLayout(jAddPane);
        jAddPane.setLayout(jAddPaneLayout);
        jAddPaneLayout.setHorizontalGroup(
            jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAddPaneLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddPaneLayout.createSequentialGroup()
                        .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jAddGenre)
                            .addComponent(jAddTitle)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddPaneLayout.createSequentialGroup()
                                .addComponent(jAddRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jAddPaneLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jAddYear, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jAddButton)))))
                    .addComponent(jErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jAddPaneLayout.setVerticalGroup(
            jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAddPaneLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(37, 37, 37)
                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jAddGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jAddRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jAddYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jAddPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddPaneLayout.createSequentialGroup()
                        .addComponent(jAddButton)
                        .addGap(0, 22, Short.MAX_VALUE))
                    .addGroup(jAddPaneLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Movies", jAddPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Fill the table with the search results.
    private void jSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchButtonActionPerformed
        try {
            statement = conn.createStatement();
            PreparedStatement preparedSearch;
            
            // Pull data from the text field and combo box to customize the query.
            String search = jSearchField.getText();
            String key = jSearchCombo.getSelectedItem().toString();
            if (!search.isEmpty()){
                /*   Prepare against SQL injection.
                 *  Sadly, it seems like you cant choose a column with a prepared statement.
                 *  But we can just directly add key to the query without using prepared
                 *  statement, because they can't edit in any custom values.
                 */
                query = "SELECT * FROM movies WHERE " + key + " REGEXP ?";
                preparedSearch = conn.prepareStatement(query);
                preparedSearch.setString(1, search);
                result = preparedSearch.executeQuery();
            } else {
                query = "SELECT * FROM movies";  //REGEXP doesn't work if the string is null.
                result = statement.executeQuery(query);
            }
            
            // Create a vector of vectors for the actual data.
            Vector data = new Vector();
            Vector row = new Vector();
            while(result.next())
            {
                row = new Vector(NUM_COLUMNS);
                for(int i = 1; i <= NUM_COLUMNS; i++){
                    row.add(result.getString(i));
                }
                data.add(row);
            }
            
            /*   Create a temporary table, and make it uneditable.  Could do this and
             *  setting the jTable1 model at the same time, but I don't want to do
             *  too many things in one statement.
             */
            TableModel tempTable = new DefaultTableModel(data, COLUMN_NAMES){
                @Override
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            };
             
            /*   Override the table with the new data.  Note: the original table will look
             *  different before the first query if the number and names of columns change.
             *  This won't affect how the program works, however.
             */
            jTable1.setModel(tempTable);
            
        }
        catch (SQLException e){
            System.err.println("Connection failed");
        }
    }//GEN-LAST:event_jSearchButtonActionPerformed

    private void jAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddButtonActionPerformed
        try {
            statement = conn.createStatement();
            
            // Pull data from the text fields and combo box for the new movie data.
            String addTitle = jAddTitle.getText();
            String addGenre = jAddGenre.getText();
            String addRating = jAddRating.getSelectedItem().toString();
            String tempYear = jAddYear.getText();
            int addYear = 0;
            PreparedStatement preparedAdd;
            
            /*   A boolean to make sure adding the new movie is okay.
             *  Will be set false if Year isn't an int, if anything is empty,
             *  or if a movie with the same title already exists.
             */
            boolean okayToAdd = true;
            
            // Make sure the year is an int using regex.
            if (!tempYear.matches("\\d+") || tempYear.isEmpty()){
                okayToAdd = false;
                jErrorLabel.setText("Year isn't an integer.");
            } else {
                addYear = Integer.parseInt(tempYear);
            }
            
            // Make sure Title and Genre aren't empty.
            if (addTitle.isEmpty() || addGenre.isEmpty()){
                okayToAdd = false;
                jErrorLabel.setText("Something is empty.");
            }
            
            // Make sure there isn't another movie with the same Title.
            query = "SELECT * FROM movies WHERE Title = ?";
            preparedAdd = conn.prepareStatement(query);
            preparedAdd.setString(1, addTitle);
            preparedAdd.execute();
            result = preparedAdd.executeQuery();
            // If there IS a result, then we shouldn't add the movie.
            if (result.isBeforeFirst()){
                okayToAdd = false;
                jErrorLabel.setText("There's another movie with that name.");
            }
            
            if (okayToAdd){
                query = "INSERT INTO movies VALUES(?, ?, ?, ?)";
                preparedAdd = conn.prepareStatement(query);
                preparedAdd.setString(1, addTitle);
                preparedAdd.setString(2, addGenre);
                preparedAdd.setString(3, addRating);
                preparedAdd.setInt(4, addYear);
                preparedAdd.execute();
                jErrorLabel.setText("Added the movie " + addTitle + ".");
            }
        }
        catch (SQLException e){
            System.err.println("Connection failed");
        }
    }//GEN-LAST:event_jAddButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        try {
            Connector c = new Connector();
            conn = c.makeConnection();
            System.out.println("Connection established");
        }
        catch (SQLException e) {
            e.printStackTrace();
            System.err.println("Connection failed");
            return;     // If can't make a connection, won't run anything else
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddButton;
    private javax.swing.JTextField jAddGenre;
    private javax.swing.JPanel jAddPane;
    private javax.swing.JComboBox jAddRating;
    private javax.swing.JTextField jAddTitle;
    private javax.swing.JTextField jAddYear;
    private javax.swing.JLabel jErrorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchButton;
    private javax.swing.JComboBox jSearchCombo;
    private javax.swing.JTextField jSearchField;
    private javax.swing.JPanel jSearchPane;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
